import MacrosForStroblMocks
import XCTest
@testable import MacrosForStroblMocksClient

@UsesStroblMocks
final class Test04MockWithNonCustomStringConvertibleCalledMethodsProperty: XCTestCase {

    @StroblMock var mock: MockWithNonCustomStringConvertibleCalledMethodsProperty!

    override func setUpWithError() throws {
        mock = MockWithNonCustomStringConvertibleCalledMethodsProperty()
    }
    
    func testMockWithNonCustomStringConvertibleCalledMethodsPropertyCausesVerifyStroblMocksUnusedToFailWithNonStroblMockMessage() {
        XCTAssertFalse(mock.calledMethods is CustomStringConvertible)
        let expectedDescription = "failed - 'mock' does not appear to be a Strobl Mock. 'calledMethods' is not CustomStringConvertible."
        let options = XCTExpectedFailure.Options()
        options.issueMatcher = { issue in
            issue.type == .assertionFailure && issue.compactDescription == expectedDescription
        }

        // Test needs to be run to get failure.
        // It should result in the following message:
        //
        //      'mock' does not appear to be a Strobl Mock. 'calledMethods' is not CustomStringConvertible.
        //
        XCTExpectFailure("This text exercises code generated by @UsesStroblMocks and should fail", options: options)
        verifyStroblMocksUnused()
        
    }

}
